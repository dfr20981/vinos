<?php
/**
 * GetNotificationsSummaryByPanOrTokenpostPayload
 *
 * PHP version 5
 *
 * @category Class
 * @package  pmc_105
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Alert History and Customer Profiles API
 *
 * The Alert History and Customer Profiles API is used to retrieve alert history information and for issuers using the VTC Alert Delivery Service to store cardholder contact information.
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace pmc_105\model;

use \ArrayAccess;

/**
 * GetNotificationsSummaryByPanOrTokenpostPayload Class Doc Comment
 *
 * @category    Class
 * @description request
 * @package     pmc_105
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GetNotificationsSummaryByPanOrTokenpostPayload implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'GetNotificationsSummaryByPanOrTokenpostPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'pagination' => '\pmc_105\model\Pagination',
        'include_alert_details' => 'bool',
        'include_merchant_details' => 'bool',
        'time_range' => '\pmc_105\model\TimeRange',
        'include_contact_details' => 'bool',
        'primary_account_number' => 'string',
        'payment_token' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'pagination' => 'pagination',
        'include_alert_details' => 'includeAlertDetails',
        'include_merchant_details' => 'includeMerchantDetails',
        'time_range' => 'timeRange',
        'include_contact_details' => 'includeContactDetails',
        'primary_account_number' => 'primaryAccountNumber',
        'payment_token' => 'paymentToken'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'pagination' => 'setPagination',
        'include_alert_details' => 'setIncludeAlertDetails',
        'include_merchant_details' => 'setIncludeMerchantDetails',
        'time_range' => 'setTimeRange',
        'include_contact_details' => 'setIncludeContactDetails',
        'primary_account_number' => 'setPrimaryAccountNumber',
        'payment_token' => 'setPaymentToken'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'pagination' => 'getPagination',
        'include_alert_details' => 'getIncludeAlertDetails',
        'include_merchant_details' => 'getIncludeMerchantDetails',
        'time_range' => 'getTimeRange',
        'include_contact_details' => 'getIncludeContactDetails',
        'primary_account_number' => 'getPrimaryAccountNumber',
        'payment_token' => 'getPaymentToken'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['pagination'] = isset($data['pagination']) ? $data['pagination'] : null;
        $this->container['include_alert_details'] = isset($data['include_alert_details']) ? $data['include_alert_details'] : null;
        $this->container['include_merchant_details'] = isset($data['include_merchant_details']) ? $data['include_merchant_details'] : null;
        $this->container['time_range'] = isset($data['time_range']) ? $data['time_range'] : null;
        $this->container['include_contact_details'] = isset($data['include_contact_details']) ? $data['include_contact_details'] : null;
        $this->container['primary_account_number'] = isset($data['primary_account_number']) ? $data['primary_account_number'] : null;
        $this->container['payment_token'] = isset($data['payment_token']) ? $data['payment_token'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['pagination'] === null) {
            $invalid_properties[] = "'pagination' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['pagination'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets pagination
     * @return \pmc_105\model\Pagination
     */
    public function getPagination()
    {
        return $this->container['pagination'];
    }

    /**
     * Sets pagination
     * @param \pmc_105\model\Pagination $pagination
     * @return $this
     */
    public function setPagination($pagination)
    {
        $this->container['pagination'] = $pagination;

        return $this;
    }

    /**
     * Gets include_alert_details
     * @return bool
     */
    public function getIncludeAlertDetails()
    {
        return $this->container['include_alert_details'];
    }

    /**
     * Sets include_alert_details
     * @param bool $include_alert_details Indicate if alertDetails object will be populated in response. Defaults to false
     * @return $this
     */
    public function setIncludeAlertDetails($include_alert_details)
    {
        $this->container['include_alert_details'] = $include_alert_details;

        return $this;
    }

    /**
     * Gets include_merchant_details
     * @return bool
     */
    public function getIncludeMerchantDetails()
    {
        return $this->container['include_merchant_details'];
    }

    /**
     * Sets include_merchant_details
     * @param bool $include_merchant_details Indicate if merchantInfo object will be populated in response. Defaults to false
     * @return $this
     */
    public function setIncludeMerchantDetails($include_merchant_details)
    {
        $this->container['include_merchant_details'] = $include_merchant_details;

        return $this;
    }

    /**
     * Gets time_range
     * @return \pmc_105\model\TimeRange
     */
    public function getTimeRange()
    {
        return $this->container['time_range'];
    }

    /**
     * Sets time_range
     * @param \pmc_105\model\TimeRange $time_range
     * @return $this
     */
    public function setTimeRange($time_range)
    {
        $this->container['time_range'] = $time_range;

        return $this;
    }

    /**
     * Gets include_contact_details
     * @return bool
     */
    public function getIncludeContactDetails()
    {
        return $this->container['include_contact_details'];
    }

    /**
     * Sets include_contact_details
     * @param bool $include_contact_details Indicate if contacts object will be populated in response. Defaults to false
     * @return $this
     */
    public function setIncludeContactDetails($include_contact_details)
    {
        $this->container['include_contact_details'] = $include_contact_details;

        return $this;
    }

    /**
     * Gets primary_account_number
     * @return string
     */
    public function getPrimaryAccountNumber()
    {
        return $this->container['primary_account_number'];
    }

    /**
     * Sets primary_account_number
     * @param string $primary_account_number The card number for which the alert history details are to be returned, must be between 16 and 19
     * @return $this
     */
    public function setPrimaryAccountNumber($primary_account_number)
    {
        $this->container['primary_account_number'] = $primary_account_number;

        return $this;
    }

    /**
     * Gets payment_token
     * @return string
     */
    public function getPaymentToken()
    {
        return $this->container['payment_token'];
    }

    /**
     * Sets payment_token
     * @param string $payment_token The paymentToken number for which the alert history details are to be returned
     * @return $this
     */
    public function setPaymentToken($payment_token)
    {
        $this->container['payment_token'] = $payment_token;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\pmc_105\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\pmc_105\ObjectSerializer::sanitizeForSerialization($this));
    }
}

/**
* ----------------------------------------------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* ----------------------------------------------------------------------------------------------------------------------
*/