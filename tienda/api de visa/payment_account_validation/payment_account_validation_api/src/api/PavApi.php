<?php
/**
 * PavApi
 * PHP version 5
 *
 * @category Class
 * @package  cv_100
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Payment Account Validation API
 *
 * The Payment Account Validation API allows applications to run validations of the payment account before processing a transaction ensuring greater probability of success and allowing for a more seamless transaction flow.
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cv_100\api;

use \cv_100\ApiClient;
use \cv_100\ApiException;
use \cv_100\Configuration;
use \cv_100\ObjectSerializer;

/**
 * PavApi Class Doc Comment
 *
 * @category Class
 * @package  cv_100
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PavApi
{
    /**
     * API Client
     *
     * @var \cv_100\ApiClient instance of the ApiClient
     */
    protected $apiClient;

    /**
     * Constructor
     *
     * @param \cv_100\ApiClient|null $apiClient The api client to use
     */
    public function __construct(\cv_100\ApiClient $apiClient = null)
    {
        if ($apiClient === null) {
            $apiClient = new ApiClient();
        }

        $this->apiClient = $apiClient;
    }

    /**
     * Get API client
     *
     * @return \cv_100\ApiClient get the API client
     */
    public function getApiClient()
    {
        return $this->apiClient;
    }

    /**
     * Set the API client
     *
     * @param \cv_100\ApiClient $apiClient set the API client
     *
     * @return PavApi
     */
    public function setApiClient(\cv_100\ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
        return $this;
    }

    /**
     * Operation postcardvalidation
     *
     * 
     *
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload The primary account number for which account validations are being performed (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload2 The expiration date for the primaryAccountNumber in the request. The date should not be a past date.&lt;/br&gt;Required when the cvv2Value is present. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload3  (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload4 The cardCvv2Value value provided by the account holder for the primaryAccountNumber in the request.&lt;/br&gt;Required when addressVerificationResults is not present. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload5 This is an optional field.  The clients of Funds Transfer APIs can choose to provide acquiringBin for reporting purpose.  The Bank Identification Number (BIN) under which your Funds Transfer is registered. This must match the information provided during enrollment. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload6 This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.&lt;/br&gt;The clients of Funds Transfer APIs can choose to provide acquirerCountryCode for reporting purpose.&lt;/br&gt;Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.&lt;br&gt;Refer to &lt;a href&#x3D;\&quot;/request_response_codes#iso_country_and_currency_codes\&quot;&gt;ISO Codes&lt;/a&gt; (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload7 This is an optional field. The clients of Funds Transfer APIs can choose to provide card acceptor information for reporting purposes. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload8 This is an optional field. It is recommended that the clients of Funds Transfer APIs provide systemsTraceAuditNumber for tie the calls with a single funds transfer transaction. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload9 This is an optional field. It is recommended that the clients of Funds Transfer APIs provide retrievalReferenceNumber for tie the calls with a single funds transfer transaction.&lt;/br&gt;Recommended Format: ydddhhnnnnnn&lt;/br&gt;The first fours digits must be a valid yddd date in the Julian date format, where the first digit &#x3D; 0-9 (last digit of current year) and the next three digits &#x3D; 001-366 (number of the day in the year).&lt;/br&gt;hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.&lt;/br&gt;nnnnnn can be the systemsTraceAuditNumber or any 6 digit number. (required)
     * @throws \cv_100\ApiException on non-2xx response
     * @return \cv_100\model\CardvalidationpostResponse
     */
    public function postcardvalidation($cardvalidationpost_payload, $cardvalidationpost_payload2, $cardvalidationpost_payload3, $cardvalidationpost_payload4, $cardvalidationpost_payload5, $cardvalidationpost_payload6, $cardvalidationpost_payload7, $cardvalidationpost_payload8, $cardvalidationpost_payload9)
    {
        list($response) = $this->postcardvalidationWithHttpInfo($cardvalidationpost_payload, $cardvalidationpost_payload2, $cardvalidationpost_payload3, $cardvalidationpost_payload4, $cardvalidationpost_payload5, $cardvalidationpost_payload6, $cardvalidationpost_payload7, $cardvalidationpost_payload8, $cardvalidationpost_payload9);
        return $response;
    }

    /**
     * Operation postcardvalidationWithHttpInfo
     *
     * 
     *
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload The primary account number for which account validations are being performed (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload2 The expiration date for the primaryAccountNumber in the request. The date should not be a past date.&lt;/br&gt;Required when the cvv2Value is present. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload3  (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload4 The cardCvv2Value value provided by the account holder for the primaryAccountNumber in the request.&lt;/br&gt;Required when addressVerificationResults is not present. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload5 This is an optional field.  The clients of Funds Transfer APIs can choose to provide acquiringBin for reporting purpose.  The Bank Identification Number (BIN) under which your Funds Transfer is registered. This must match the information provided during enrollment. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload6 This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.&lt;/br&gt;The clients of Funds Transfer APIs can choose to provide acquirerCountryCode for reporting purpose.&lt;/br&gt;Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.&lt;br&gt;Refer to &lt;a href&#x3D;\&quot;/request_response_codes#iso_country_and_currency_codes\&quot;&gt;ISO Codes&lt;/a&gt; (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload7 This is an optional field. The clients of Funds Transfer APIs can choose to provide card acceptor information for reporting purposes. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload8 This is an optional field. It is recommended that the clients of Funds Transfer APIs provide systemsTraceAuditNumber for tie the calls with a single funds transfer transaction. (required)
     * @param \cv_100\model\CardvalidationpostPayload $cardvalidationpost_payload9 This is an optional field. It is recommended that the clients of Funds Transfer APIs provide retrievalReferenceNumber for tie the calls with a single funds transfer transaction.&lt;/br&gt;Recommended Format: ydddhhnnnnnn&lt;/br&gt;The first fours digits must be a valid yddd date in the Julian date format, where the first digit &#x3D; 0-9 (last digit of current year) and the next three digits &#x3D; 001-366 (number of the day in the year).&lt;/br&gt;hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.&lt;/br&gt;nnnnnn can be the systemsTraceAuditNumber or any 6 digit number. (required)
     * @throws \cv_100\ApiException on non-2xx response
     * @return array of \cv_100\model\CardvalidationpostResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function postcardvalidationWithHttpInfo($cardvalidationpost_payload, $cardvalidationpost_payload2, $cardvalidationpost_payload3, $cardvalidationpost_payload4, $cardvalidationpost_payload5, $cardvalidationpost_payload6, $cardvalidationpost_payload7, $cardvalidationpost_payload8, $cardvalidationpost_payload9)
    {
        // verify the required parameter 'cardvalidationpost_payload' is set
        if ($cardvalidationpost_payload === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload2' is set
        if ($cardvalidationpost_payload2 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload2 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload3' is set
        if ($cardvalidationpost_payload3 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload3 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload4' is set
        if ($cardvalidationpost_payload4 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload4 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload5' is set
        if ($cardvalidationpost_payload5 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload5 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload6' is set
        if ($cardvalidationpost_payload6 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload6 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload7' is set
        if ($cardvalidationpost_payload7 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload7 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload8' is set
        if ($cardvalidationpost_payload8 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload8 when calling postcardvalidation');
        }
        // verify the required parameter 'cardvalidationpost_payload9' is set
        if ($cardvalidationpost_payload9 === null) {
            throw new \InvalidArgumentException('Missing the required parameter $cardvalidationpost_payload9 when calling postcardvalidation');
        }
        // parse inputs
        $path = "/pav/v1/cardvalidation";
        $resourcePath = "cardvalidation";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // default format to json
        $path = str_replace("{format}", "json", $path);
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload)) {
            $_tempBody = $cardvalidationpost_payload;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload2)) {
            $_tempBody = $cardvalidationpost_payload2;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload3)) {
            $_tempBody = $cardvalidationpost_payload3;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload4)) {
            $_tempBody = $cardvalidationpost_payload4;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload5)) {
            $_tempBody = $cardvalidationpost_payload5;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload6)) {
            $_tempBody = $cardvalidationpost_payload6;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload7)) {
            $_tempBody = $cardvalidationpost_payload7;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload8)) {
            $_tempBody = $cardvalidationpost_payload8;
        }
// body params
        $_tempBody = null;
        if (isset($cardvalidationpost_payload9)) {
            $_tempBody = $cardvalidationpost_payload9;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic ' . base64_encode($this->apiClient->getConfig()->getUsername() . ":" . $this->apiClient->getConfig()->getPassword());
        }

        if (sizeof($queryParams) !== 0){
            ksort($queryParams);
        }

        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $path,
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\cv_100\model\CardvalidationpostResponse',
                '/pav/v1/cardvalidation'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\cv_100\model\CardvalidationpostResponse', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\cv_100\model\CardvalidationpostResponse', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }
}
/**
* --------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* --------------------------------------------------------------------------------
*/