<?php
/**
 * CardActivationpostPayload
 *
 * PHP version 5
 *
 * @category Class
 * @package  dcas_101
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Card Services API
 *
 * Manage cardholder’s card and account information, notification settings, and balance information.
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace dcas_101\model;

use \ArrayAccess;

/**
 * CardActivationpostPayload Class Doc Comment
 *
 * @category    Class
 * @description Activation request with all the card details; expiration and CVV2 being required.
 * @package     dcas_101
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CardActivationpostPayload implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'cardActivationpostPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ssn_token' => '\dcas_101\model\SsnToken',
        'expiration_date' => '\dcas_101\model\ExpirationDate',
        'mothers_maiden_name_token' => '\dcas_101\model\MothersMaidenNameToken',
        'cvv2' => 'string',
        'birth_date_token' => '\dcas_101\model\BirthDateToken',
        'drivers_license_token' => '\dcas_101\model\DriversLicenseToken',
        'phone_number_token' => '\dcas_101\model\PhoneNumberToken'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'ssn_token' => 'ssnToken',
        'expiration_date' => 'expirationDate',
        'mothers_maiden_name_token' => 'mothersMaidenNameToken',
        'cvv2' => 'cvv2',
        'birth_date_token' => 'birthDateToken',
        'drivers_license_token' => 'driversLicenseToken',
        'phone_number_token' => 'phoneNumberToken'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'ssn_token' => 'setSsnToken',
        'expiration_date' => 'setExpirationDate',
        'mothers_maiden_name_token' => 'setMothersMaidenNameToken',
        'cvv2' => 'setCvv2',
        'birth_date_token' => 'setBirthDateToken',
        'drivers_license_token' => 'setDriversLicenseToken',
        'phone_number_token' => 'setPhoneNumberToken'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'ssn_token' => 'getSsnToken',
        'expiration_date' => 'getExpirationDate',
        'mothers_maiden_name_token' => 'getMothersMaidenNameToken',
        'cvv2' => 'getCvv2',
        'birth_date_token' => 'getBirthDateToken',
        'drivers_license_token' => 'getDriversLicenseToken',
        'phone_number_token' => 'getPhoneNumberToken'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ssn_token'] = isset($data['ssn_token']) ? $data['ssn_token'] : null;
        $this->container['expiration_date'] = isset($data['expiration_date']) ? $data['expiration_date'] : null;
        $this->container['mothers_maiden_name_token'] = isset($data['mothers_maiden_name_token']) ? $data['mothers_maiden_name_token'] : null;
        $this->container['cvv2'] = isset($data['cvv2']) ? $data['cvv2'] : null;
        $this->container['birth_date_token'] = isset($data['birth_date_token']) ? $data['birth_date_token'] : null;
        $this->container['drivers_license_token'] = isset($data['drivers_license_token']) ? $data['drivers_license_token'] : null;
        $this->container['phone_number_token'] = isset($data['phone_number_token']) ? $data['phone_number_token'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets ssn_token
     * @return \dcas_101\model\SsnToken
     */
    public function getSsnToken()
    {
        return $this->container['ssn_token'];
    }

    /**
     * Sets ssn_token
     * @param \dcas_101\model\SsnToken $ssn_token
     * @return $this
     */
    public function setSsnToken($ssn_token)
    {
        $this->container['ssn_token'] = $ssn_token;

        return $this;
    }

    /**
     * Gets expiration_date
     * @return \dcas_101\model\ExpirationDate
     */
    public function getExpirationDate()
    {
        return $this->container['expiration_date'];
    }

    /**
     * Sets expiration_date
     * @param \dcas_101\model\ExpirationDate $expiration_date
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        $this->container['expiration_date'] = $expiration_date;

        return $this;
    }

    /**
     * Gets mothers_maiden_name_token
     * @return \dcas_101\model\MothersMaidenNameToken
     */
    public function getMothersMaidenNameToken()
    {
        return $this->container['mothers_maiden_name_token'];
    }

    /**
     * Sets mothers_maiden_name_token
     * @param \dcas_101\model\MothersMaidenNameToken $mothers_maiden_name_token
     * @return $this
     */
    public function setMothersMaidenNameToken($mothers_maiden_name_token)
    {
        $this->container['mothers_maiden_name_token'] = $mothers_maiden_name_token;

        return $this;
    }

    /**
     * Gets cvv2
     * @return string
     */
    public function getCvv2()
    {
        return $this->container['cvv2'];
    }

    /**
     * Sets cvv2
     * @param string $cvv2 
     * @return $this
     */
    public function setCvv2($cvv2)
    {
        $this->container['cvv2'] = $cvv2;

        return $this;
    }

    /**
     * Gets birth_date_token
     * @return \dcas_101\model\BirthDateToken
     */
    public function getBirthDateToken()
    {
        return $this->container['birth_date_token'];
    }

    /**
     * Sets birth_date_token
     * @param \dcas_101\model\BirthDateToken $birth_date_token
     * @return $this
     */
    public function setBirthDateToken($birth_date_token)
    {
        $this->container['birth_date_token'] = $birth_date_token;

        return $this;
    }

    /**
     * Gets drivers_license_token
     * @return \dcas_101\model\DriversLicenseToken
     */
    public function getDriversLicenseToken()
    {
        return $this->container['drivers_license_token'];
    }

    /**
     * Sets drivers_license_token
     * @param \dcas_101\model\DriversLicenseToken $drivers_license_token
     * @return $this
     */
    public function setDriversLicenseToken($drivers_license_token)
    {
        $this->container['drivers_license_token'] = $drivers_license_token;

        return $this;
    }

    /**
     * Gets phone_number_token
     * @return \dcas_101\model\PhoneNumberToken
     */
    public function getPhoneNumberToken()
    {
        return $this->container['phone_number_token'];
    }

    /**
     * Sets phone_number_token
     * @param \dcas_101\model\PhoneNumberToken $phone_number_token
     * @return $this
     */
    public function setPhoneNumberToken($phone_number_token)
    {
        $this->container['phone_number_token'] = $phone_number_token;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\dcas_101\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\dcas_101\ObjectSerializer::sanitizeForSerialization($this));
    }
}

/**
* ----------------------------------------------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* ----------------------------------------------------------------------------------------------------------------------
*/