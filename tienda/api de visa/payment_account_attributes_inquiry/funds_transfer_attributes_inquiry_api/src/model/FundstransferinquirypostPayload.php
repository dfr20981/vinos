<?php
/**
 * FundstransferinquirypostPayload
 *
 * PHP version 5
 *
 * @category Class
 * @package  ca_100
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Funds Transfer Attributes Inquiry API
 *
 * The Funds Transfer Attributes Inquiry API is often used with a funds transfer to/from a Visa payment account to determine key characteristics of a recipient card before initiating the transfer like country, card-type, block status, etc.
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ca_100\model;

use \ArrayAccess;

/**
 * FundstransferinquirypostPayload Class Doc Comment
 *
 * @category    Class
 * @description Request body for Funds Transfer Inquiry
 * @package     ca_100
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FundstransferinquirypostPayload implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'fundstransferinquirypostPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'acquiring_bin' => 'int',
        'retrieval_reference_number' => 'string',
        'sharing_group_code' => 'string',
        'acquirer_country_code' => 'string',
        'primary_account_number' => 'string',
        'systems_trace_audit_number' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'acquiring_bin' => 'acquiringBin',
        'retrieval_reference_number' => 'retrievalReferenceNumber',
        'sharing_group_code' => 'sharingGroupCode',
        'acquirer_country_code' => 'acquirerCountryCode',
        'primary_account_number' => 'primaryAccountNumber',
        'systems_trace_audit_number' => 'systemsTraceAuditNumber'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'acquiring_bin' => 'setAcquiringBin',
        'retrieval_reference_number' => 'setRetrievalReferenceNumber',
        'sharing_group_code' => 'setSharingGroupCode',
        'acquirer_country_code' => 'setAcquirerCountryCode',
        'primary_account_number' => 'setPrimaryAccountNumber',
        'systems_trace_audit_number' => 'setSystemsTraceAuditNumber'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'acquiring_bin' => 'getAcquiringBin',
        'retrieval_reference_number' => 'getRetrievalReferenceNumber',
        'sharing_group_code' => 'getSharingGroupCode',
        'acquirer_country_code' => 'getAcquirerCountryCode',
        'primary_account_number' => 'getPrimaryAccountNumber',
        'systems_trace_audit_number' => 'getSystemsTraceAuditNumber'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['acquiring_bin'] = isset($data['acquiring_bin']) ? $data['acquiring_bin'] : null;
        $this->container['retrieval_reference_number'] = isset($data['retrieval_reference_number']) ? $data['retrieval_reference_number'] : null;
        $this->container['sharing_group_code'] = isset($data['sharing_group_code']) ? $data['sharing_group_code'] : null;
        $this->container['acquirer_country_code'] = isset($data['acquirer_country_code']) ? $data['acquirer_country_code'] : null;
        $this->container['primary_account_number'] = isset($data['primary_account_number']) ? $data['primary_account_number'] : null;
        $this->container['systems_trace_audit_number'] = isset($data['systems_trace_audit_number']) ? $data['systems_trace_audit_number'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['retrieval_reference_number'] === null) {
            $invalid_properties[] = "'retrieval_reference_number' can't be null";
        }
        if ($this->container['primary_account_number'] === null) {
            $invalid_properties[] = "'primary_account_number' can't be null";
        }
        if ($this->container['systems_trace_audit_number'] === null) {
            $invalid_properties[] = "'systems_trace_audit_number' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['retrieval_reference_number'] === null) {
            return false;
        }
        if ($this->container['primary_account_number'] === null) {
            return false;
        }
        if ($this->container['systems_trace_audit_number'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets acquiring_bin
     * @return int
     */
    public function getAcquiringBin()
    {
        return $this->container['acquiring_bin'];
    }

    /**
     * Sets acquiring_bin
     * @param int $acquiring_bin This is an optional field. The Bank Identification Number (BIN) under which your Funds Transfer application is registered. This must match the information provided during enrollment.
     * @return $this
     */
    public function setAcquiringBin($acquiring_bin)
    {
        $this->container['acquiring_bin'] = $acquiring_bin;

        return $this;
    }

    /**
     * Gets retrieval_reference_number
     * @return string
     */
    public function getRetrievalReferenceNumber()
    {
        return $this->container['retrieval_reference_number'];
    }

    /**
     * Sets retrieval_reference_number
     * @param string $retrieval_reference_number A value used to tie together service calls related to a single financial transaction.<br>Recommended Format: ydddhhnnnnnn<br>The first four digits must be a valid yddd date in the Julian date format, where the first digit = 0-9 (last digit of current year) and the next three digits = 001-366 (number of the day in the year).<br>hh can be the two digit hour in a 24 hour clock (00-23) during which the transaction is performed.<br> nnnnnn can be the SystemsTraceAuditNumber or any 6 digit number.
     * @return $this
     */
    public function setRetrievalReferenceNumber($retrieval_reference_number)
    {
        $this->container['retrieval_reference_number'] = $retrieval_reference_number;

        return $this;
    }

    /**
     * Gets sharing_group_code
     * @return string
     */
    public function getSharingGroupCode()
    {
        return $this->container['sharing_group_code'];
    }

    /**
     * Sets sharing_group_code
     * @param string $sharing_group_code This is an optional field. If sharingGroupCode is provided, it is highly recommended that acquirerCountryCode is also provided.<br>Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.
     * @return $this
     */
    public function setSharingGroupCode($sharing_group_code)
    {
        $this->container['sharing_group_code'] = $sharing_group_code;

        return $this;
    }

    /**
     * Gets acquirer_country_code
     * @return string
     */
    public function getAcquirerCountryCode()
    {
        return $this->container['acquirer_country_code'];
    }

    /**
     * Sets acquirer_country_code
     * @param string $acquirer_country_code This is an optional field. If acquiringBin is provided, it is highly recommended that acquirerCountryCode is also provided.<br>Use a 3-digit numeric country code for the country where the Funds Transfer solution is registered. This must match the information provided during program enrollment.
     * @return $this
     */
    public function setAcquirerCountryCode($acquirer_country_code)
    {
        $this->container['acquirer_country_code'] = $acquirer_country_code;

        return $this;
    }

    /**
     * Gets primary_account_number
     * @return string
     */
    public function getPrimaryAccountNumber()
    {
        return $this->container['primary_account_number'];
    }

    /**
     * Sets primary_account_number
     * @param string $primary_account_number The primary account number or Token for which account attributes are being requested
     * @return $this
     */
    public function setPrimaryAccountNumber($primary_account_number)
    {
        $this->container['primary_account_number'] = $primary_account_number;

        return $this;
    }

    /**
     * Gets systems_trace_audit_number
     * @return string
     */
    public function getSystemsTraceAuditNumber()
    {
        return $this->container['systems_trace_audit_number'];
    }

    /**
     * Sets systems_trace_audit_number
     * @param string $systems_trace_audit_number A unique value should be used for each API method where this is required. If this is used for funds transfer, please refer to <a href=\"/products/visa_direct/reference#visa_direct__funds_transfer__v1__pullfunds\" > PullFundsTransactions POST</a>Funds Transfer API for more details.
     * @return $this
     */
    public function setSystemsTraceAuditNumber($systems_trace_audit_number)
    {
        $this->container['systems_trace_audit_number'] = $systems_trace_audit_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\ca_100\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\ca_100\ObjectSerializer::sanitizeForSerialization($this));
    }
}

/**
* ----------------------------------------------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* ----------------------------------------------------------------------------------------------------------------------
*/