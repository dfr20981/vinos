<?php
/**
 * ResponseValues
 *
 * PHP version 5
 *
 * @category Class
 * @package  ml_100
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Merchant Locator API
 *
 * Find Visa accepting merchants around by geolocation
 *
 * OpenAPI spec version: v1
 * Contact: 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ml_100\model;

use \ArrayAccess;

/**
 * ResponseValues Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     ml_100
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ResponseValues implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'responseValues';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'location_address_latitude' => 'string',
        'merchant_city' => 'string',
        'merchant_street_address' => 'string',
        'merchant_category_code' => 'object[]',
        'distance' => 'int',
        'visa_enterprise_name' => 'string',
        'business_legal_name' => 'object[]',
        'visa_store_name' => 'string',
        'visa_merchant_id' => 'int',
        'merchant_category_code_desc' => 'object[]',
        'merchant_state' => 'string',
        'visa_merchant_name' => 'string',
        'merchant_country_code' => 'int',
        'merchant_postal_code' => 'string',
        'dbaname' => 'object[]',
        'visa_store_id' => 'int',
        'payment_facilitator_name' => 'object[]',
        'merchant_url' => 'object[]',
        'location_address_longitude' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'location_address_latitude' => 'locationAddressLatitude',
        'merchant_city' => 'merchantCity',
        'merchant_street_address' => 'merchantStreetAddress',
        'merchant_category_code' => 'merchantCategoryCode',
        'distance' => 'distance',
        'visa_enterprise_name' => 'visaEnterpriseName',
        'business_legal_name' => 'businessLegalName',
        'visa_store_name' => 'visaStoreName',
        'visa_merchant_id' => 'visaMerchantId',
        'merchant_category_code_desc' => 'merchantCategoryCodeDesc',
        'merchant_state' => 'merchantState',
        'visa_merchant_name' => 'visaMerchantName',
        'merchant_country_code' => 'merchantCountryCode',
        'merchant_postal_code' => 'merchantPostalCode',
        'dbaname' => 'dbaname',
        'visa_store_id' => 'visaStoreId',
        'payment_facilitator_name' => 'paymentFacilitatorName',
        'merchant_url' => 'merchantUrl',
        'location_address_longitude' => 'locationAddressLongitude'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'location_address_latitude' => 'setLocationAddressLatitude',
        'merchant_city' => 'setMerchantCity',
        'merchant_street_address' => 'setMerchantStreetAddress',
        'merchant_category_code' => 'setMerchantCategoryCode',
        'distance' => 'setDistance',
        'visa_enterprise_name' => 'setVisaEnterpriseName',
        'business_legal_name' => 'setBusinessLegalName',
        'visa_store_name' => 'setVisaStoreName',
        'visa_merchant_id' => 'setVisaMerchantId',
        'merchant_category_code_desc' => 'setMerchantCategoryCodeDesc',
        'merchant_state' => 'setMerchantState',
        'visa_merchant_name' => 'setVisaMerchantName',
        'merchant_country_code' => 'setMerchantCountryCode',
        'merchant_postal_code' => 'setMerchantPostalCode',
        'dbaname' => 'setDbaname',
        'visa_store_id' => 'setVisaStoreId',
        'payment_facilitator_name' => 'setPaymentFacilitatorName',
        'merchant_url' => 'setMerchantUrl',
        'location_address_longitude' => 'setLocationAddressLongitude'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'location_address_latitude' => 'getLocationAddressLatitude',
        'merchant_city' => 'getMerchantCity',
        'merchant_street_address' => 'getMerchantStreetAddress',
        'merchant_category_code' => 'getMerchantCategoryCode',
        'distance' => 'getDistance',
        'visa_enterprise_name' => 'getVisaEnterpriseName',
        'business_legal_name' => 'getBusinessLegalName',
        'visa_store_name' => 'getVisaStoreName',
        'visa_merchant_id' => 'getVisaMerchantId',
        'merchant_category_code_desc' => 'getMerchantCategoryCodeDesc',
        'merchant_state' => 'getMerchantState',
        'visa_merchant_name' => 'getVisaMerchantName',
        'merchant_country_code' => 'getMerchantCountryCode',
        'merchant_postal_code' => 'getMerchantPostalCode',
        'dbaname' => 'getDbaname',
        'visa_store_id' => 'getVisaStoreId',
        'payment_facilitator_name' => 'getPaymentFacilitatorName',
        'merchant_url' => 'getMerchantUrl',
        'location_address_longitude' => 'getLocationAddressLongitude'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['location_address_latitude'] = isset($data['location_address_latitude']) ? $data['location_address_latitude'] : null;
        $this->container['merchant_city'] = isset($data['merchant_city']) ? $data['merchant_city'] : null;
        $this->container['merchant_street_address'] = isset($data['merchant_street_address']) ? $data['merchant_street_address'] : null;
        $this->container['merchant_category_code'] = isset($data['merchant_category_code']) ? $data['merchant_category_code'] : null;
        $this->container['distance'] = isset($data['distance']) ? $data['distance'] : null;
        $this->container['visa_enterprise_name'] = isset($data['visa_enterprise_name']) ? $data['visa_enterprise_name'] : null;
        $this->container['business_legal_name'] = isset($data['business_legal_name']) ? $data['business_legal_name'] : null;
        $this->container['visa_store_name'] = isset($data['visa_store_name']) ? $data['visa_store_name'] : null;
        $this->container['visa_merchant_id'] = isset($data['visa_merchant_id']) ? $data['visa_merchant_id'] : null;
        $this->container['merchant_category_code_desc'] = isset($data['merchant_category_code_desc']) ? $data['merchant_category_code_desc'] : null;
        $this->container['merchant_state'] = isset($data['merchant_state']) ? $data['merchant_state'] : null;
        $this->container['visa_merchant_name'] = isset($data['visa_merchant_name']) ? $data['visa_merchant_name'] : null;
        $this->container['merchant_country_code'] = isset($data['merchant_country_code']) ? $data['merchant_country_code'] : null;
        $this->container['merchant_postal_code'] = isset($data['merchant_postal_code']) ? $data['merchant_postal_code'] : null;
        $this->container['dbaname'] = isset($data['dbaname']) ? $data['dbaname'] : null;
        $this->container['visa_store_id'] = isset($data['visa_store_id']) ? $data['visa_store_id'] : null;
        $this->container['payment_facilitator_name'] = isset($data['payment_facilitator_name']) ? $data['payment_facilitator_name'] : null;
        $this->container['merchant_url'] = isset($data['merchant_url']) ? $data['merchant_url'] : null;
        $this->container['location_address_longitude'] = isset($data['location_address_longitude']) ? $data['location_address_longitude'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets location_address_latitude
     * @return string
     */
    public function getLocationAddressLatitude()
    {
        return $this->container['location_address_latitude'];
    }

    /**
     * Sets location_address_latitude
     * @param string $location_address_latitude Merchant&apos;s Location Address Latitude
     * @return $this
     */
    public function setLocationAddressLatitude($location_address_latitude)
    {
        $this->container['location_address_latitude'] = $location_address_latitude;

        return $this;
    }

    /**
     * Gets merchant_city
     * @return string
     */
    public function getMerchantCity()
    {
        return $this->container['merchant_city'];
    }

    /**
     * Sets merchant_city
     * @param string $merchant_city City of the Merchant
     * @return $this
     */
    public function setMerchantCity($merchant_city)
    {
        $this->container['merchant_city'] = $merchant_city;

        return $this;
    }

    /**
     * Gets merchant_street_address
     * @return string
     */
    public function getMerchantStreetAddress()
    {
        return $this->container['merchant_street_address'];
    }

    /**
     * Sets merchant_street_address
     * @param string $merchant_street_address Street Address of the Merchant
     * @return $this
     */
    public function setMerchantStreetAddress($merchant_street_address)
    {
        $this->container['merchant_street_address'] = $merchant_street_address;

        return $this;
    }

    /**
     * Gets merchant_category_code
     * @return object[]
     */
    public function getMerchantCategoryCode()
    {
        return $this->container['merchant_category_code'];
    }

    /**
     * Sets merchant_category_code
     * @param object[] $merchant_category_code Category Codes of the Merchant
     * @return $this
     */
    public function setMerchantCategoryCode($merchant_category_code)
    {
        $this->container['merchant_category_code'] = $merchant_category_code;

        return $this;
    }

    /**
     * Gets distance
     * @return int
     */
    public function getDistance()
    {
        return $this->container['distance'];
    }

    /**
     * Sets distance
     * @param int $distance Distance of the Merchant in KM/M
     * @return $this
     */
    public function setDistance($distance)
    {
        $this->container['distance'] = $distance;

        return $this;
    }

    /**
     * Gets visa_enterprise_name
     * @return string
     */
    public function getVisaEnterpriseName()
    {
        return $this->container['visa_enterprise_name'];
    }

    /**
     * Sets visa_enterprise_name
     * @param string $visa_enterprise_name Visa Enterprise Name
     * @return $this
     */
    public function setVisaEnterpriseName($visa_enterprise_name)
    {
        $this->container['visa_enterprise_name'] = $visa_enterprise_name;

        return $this;
    }

    /**
     * Gets business_legal_name
     * @return object[]
     */
    public function getBusinessLegalName()
    {
        return $this->container['business_legal_name'];
    }

    /**
     * Sets business_legal_name
     * @param object[] $business_legal_name Business Legal Name
     * @return $this
     */
    public function setBusinessLegalName($business_legal_name)
    {
        $this->container['business_legal_name'] = $business_legal_name;

        return $this;
    }

    /**
     * Gets visa_store_name
     * @return string
     */
    public function getVisaStoreName()
    {
        return $this->container['visa_store_name'];
    }

    /**
     * Sets visa_store_name
     * @param string $visa_store_name Visa Store Name for a Branch/Outlet
     * @return $this
     */
    public function setVisaStoreName($visa_store_name)
    {
        $this->container['visa_store_name'] = $visa_store_name;

        return $this;
    }

    /**
     * Gets visa_merchant_id
     * @return int
     */
    public function getVisaMerchantId()
    {
        return $this->container['visa_merchant_id'];
    }

    /**
     * Sets visa_merchant_id
     * @param int $visa_merchant_id Unique identifier for a Merchant provided by VISA
     * @return $this
     */
    public function setVisaMerchantId($visa_merchant_id)
    {
        $this->container['visa_merchant_id'] = $visa_merchant_id;

        return $this;
    }

    /**
     * Gets merchant_category_code_desc
     * @return object[]
     */
    public function getMerchantCategoryCodeDesc()
    {
        return $this->container['merchant_category_code_desc'];
    }

    /**
     * Sets merchant_category_code_desc
     * @param object[] $merchant_category_code_desc Description of the MerchantCategoryCode
     * @return $this
     */
    public function setMerchantCategoryCodeDesc($merchant_category_code_desc)
    {
        $this->container['merchant_category_code_desc'] = $merchant_category_code_desc;

        return $this;
    }

    /**
     * Gets merchant_state
     * @return string
     */
    public function getMerchantState()
    {
        return $this->container['merchant_state'];
    }

    /**
     * Sets merchant_state
     * @param string $merchant_state State of the Merchant
     * @return $this
     */
    public function setMerchantState($merchant_state)
    {
        $this->container['merchant_state'] = $merchant_state;

        return $this;
    }

    /**
     * Gets visa_merchant_name
     * @return string
     */
    public function getVisaMerchantName()
    {
        return $this->container['visa_merchant_name'];
    }

    /**
     * Sets visa_merchant_name
     * @param string $visa_merchant_name Name of the Merchant
     * @return $this
     */
    public function setVisaMerchantName($visa_merchant_name)
    {
        $this->container['visa_merchant_name'] = $visa_merchant_name;

        return $this;
    }

    /**
     * Gets merchant_country_code
     * @return int
     */
    public function getMerchantCountryCode()
    {
        return $this->container['merchant_country_code'];
    }

    /**
     * Sets merchant_country_code
     * @param int $merchant_country_code Country Code of the Merchant
     * @return $this
     */
    public function setMerchantCountryCode($merchant_country_code)
    {
        $this->container['merchant_country_code'] = $merchant_country_code;

        return $this;
    }

    /**
     * Gets merchant_postal_code
     * @return string
     */
    public function getMerchantPostalCode()
    {
        return $this->container['merchant_postal_code'];
    }

    /**
     * Sets merchant_postal_code
     * @param string $merchant_postal_code Postal Code of the Merchant
     * @return $this
     */
    public function setMerchantPostalCode($merchant_postal_code)
    {
        $this->container['merchant_postal_code'] = $merchant_postal_code;

        return $this;
    }

    /**
     * Gets dbaname
     * @return object[]
     */
    public function getDbaname()
    {
        return $this->container['dbaname'];
    }

    /**
     * Sets dbaname
     * @param object[] $dbaname Doing Business As Name
     * @return $this
     */
    public function setDbaname($dbaname)
    {
        $this->container['dbaname'] = $dbaname;

        return $this;
    }

    /**
     * Gets visa_store_id
     * @return int
     */
    public function getVisaStoreId()
    {
        return $this->container['visa_store_id'];
    }

    /**
     * Sets visa_store_id
     * @param int $visa_store_id Visa Store Id for a Branch/Outlet
     * @return $this
     */
    public function setVisaStoreId($visa_store_id)
    {
        $this->container['visa_store_id'] = $visa_store_id;

        return $this;
    }

    /**
     * Gets payment_facilitator_name
     * @return object[]
     */
    public function getPaymentFacilitatorName()
    {
        return $this->container['payment_facilitator_name'];
    }

    /**
     * Sets payment_facilitator_name
     * @param object[] $payment_facilitator_name Payment Facilitator Name
     * @return $this
     */
    public function setPaymentFacilitatorName($payment_facilitator_name)
    {
        $this->container['payment_facilitator_name'] = $payment_facilitator_name;

        return $this;
    }

    /**
     * Gets merchant_url
     * @return object[]
     */
    public function getMerchantUrl()
    {
        return $this->container['merchant_url'];
    }

    /**
     * Sets merchant_url
     * @param object[] $merchant_url URL of the Merchant
     * @return $this
     */
    public function setMerchantUrl($merchant_url)
    {
        $this->container['merchant_url'] = $merchant_url;

        return $this;
    }

    /**
     * Gets location_address_longitude
     * @return string
     */
    public function getLocationAddressLongitude()
    {
        return $this->container['location_address_longitude'];
    }

    /**
     * Sets location_address_longitude
     * @param string $location_address_longitude Merchant&apos;s Location Adderess Longitude
     * @return $this
     */
    public function setLocationAddressLongitude($location_address_longitude)
    {
        $this->container['location_address_longitude'] = $location_address_longitude;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\ml_100\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\ml_100\ObjectSerializer::sanitizeForSerialization($this));
    }
}

/**
* ----------------------------------------------------------------------------------------------------------------------
*
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
* ----------------------------------------------------------------------------------------------------------------------
*/